// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: Tag List renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SEOTagsComponent
    description="Test"
    path="/test"
    title="Test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <meta
          charSet="utf-8"
        />,
        <title>
          Test
        </title>,
        <meta
          content="Test"
          name="description"
        />,
        <meta
          content="Test"
          name="og:title"
        />,
        <meta
          content="https://www.csi.lk/test"
          name="og:url"
        />,
        <meta
          content="http://www.csi.lk/into-code.png"
          name="og:image"
        />,
        <meta
          content="Test"
          name="og:description"
        />,
      ],
      "defer": true,
      "encodeSpecialCharacters": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "charSet": "utf-8",
        },
        "ref": null,
        "rendered": null,
        "type": "meta",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Test",
        },
        "ref": null,
        "rendered": "Test",
        "type": "title",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "content": "Test",
          "name": "description",
        },
        "ref": null,
        "rendered": null,
        "type": "meta",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "content": "Test",
          "name": "og:title",
        },
        "ref": null,
        "rendered": null,
        "type": "meta",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "content": "https://www.csi.lk/test",
          "name": "og:url",
        },
        "ref": null,
        "rendered": null,
        "type": "meta",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "content": "http://www.csi.lk/into-code.png",
          "name": "og:image",
        },
        "ref": null,
        "rendered": null,
        "type": "meta",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "content": "Test",
          "name": "og:description",
        },
        "ref": null,
        "rendered": null,
        "type": "meta",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <meta
            charSet="utf-8"
          />,
          <title>
            Test
          </title>,
          <meta
            content="Test"
            name="description"
          />,
          <meta
            content="Test"
            name="og:title"
          />,
          <meta
            content="https://www.csi.lk/test"
            name="og:url"
          />,
          <meta
            content="http://www.csi.lk/into-code.png"
            name="og:image"
          />,
          <meta
            content="Test"
            name="og:description"
          />,
        ],
        "defer": true,
        "encodeSpecialCharacters": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "charSet": "utf-8",
          },
          "ref": null,
          "rendered": null,
          "type": "meta",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Test",
          },
          "ref": null,
          "rendered": "Test",
          "type": "title",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "content": "Test",
            "name": "description",
          },
          "ref": null,
          "rendered": null,
          "type": "meta",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "content": "Test",
            "name": "og:title",
          },
          "ref": null,
          "rendered": null,
          "type": "meta",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "content": "https://www.csi.lk/test",
            "name": "og:url",
          },
          "ref": null,
          "rendered": null,
          "type": "meta",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "content": "http://www.csi.lk/into-code.png",
            "name": "og:image",
          },
          "ref": null,
          "rendered": null,
          "type": "meta",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "content": "Test",
            "name": "og:description",
          },
          "ref": null,
          "rendered": null,
          "type": "meta",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
